[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DICE documentation",
    "section": "",
    "text": "This is a Quarto book documenting the usage of DICE. The document is organized as follows: …\nIt is work in progress."
  },
  {
    "objectID": "stimuli.html",
    "href": "stimuli.html",
    "title": "1  Stimuli",
    "section": "",
    "text": "This section describes how to generate a feed’s content.\n\n\n\nFigure 1.1: DICE: csv file configuration"
  },
  {
    "objectID": "dice-app.html",
    "href": "dice-app.html",
    "title": "2  Launch a study",
    "section": "",
    "text": "This section will describe how to use the web-app to configure and launch DICE studies."
  },
  {
    "objectID": "deployment.html",
    "href": "deployment.html",
    "title": "3  Deploy DICE yourself",
    "section": "",
    "text": "Don’t worry if this guide looks complicated at first glance—it’s actually much simpler than it might appear! Even if you’re not familiar with using the terminal or command prompt, you’ll find that the process is straightforward and easy to follow. The commands you’ll be using are simple, and you’ll be guided through each step. Remember, many researchers who aren’t computer experts use oTree successfully every day. So take a deep breath, follow along, and you’ll have your experiment up and running in no time!\nWhat’s more, oTree has a large and active user community, which brings several advantages:\nWhether you prefer reading documentation, asking the community, or using AI tools, help is always at hand. Hence, we are confident that you’ll have your experiment up and running in no time!"
  },
  {
    "objectID": "deployment.html#prerequisites",
    "href": "deployment.html#prerequisites",
    "title": "3  Deploy DICE yourself",
    "section": "3.1 Prerequisites",
    "text": "3.1 Prerequisites\nBefore you begin, ensure you have the following installed:\n\nPython: oTree requires Python 3.7 or higher. Download and install Python from python.org.\npip: This is Python’s package installer. It usually comes with Python installation.\nCommand Prompt or Terminal: This is a text-based interface to interact with your computer. You’ll use it to run commands for installing and running oTree.\n\nOn Windows: Search for “Command Prompt” or “PowerShell” in the Start menu.\nOn macOS: Open the “Terminal” application (found in Applications > Utilities).\nOn Linux: You can usually open a terminal with Ctrl+Alt+T or by searching for “Terminal” in your application menu."
  },
  {
    "objectID": "deployment.html#install-otree",
    "href": "deployment.html#install-otree",
    "title": "3  Deploy DICE yourself",
    "section": "3.2 Install oTree",
    "text": "3.2 Install oTree\nOpen a command prompt or terminal and run:\npip install otree"
  },
  {
    "objectID": "deployment.html#extract-the-provided-otree-project",
    "href": "deployment.html#extract-the-provided-otree-project",
    "title": "3  Deploy DICE yourself",
    "section": "3.3 Extract the Provided oTree Project",
    "text": "3.3 Extract the Provided oTree Project\nCreate and open a new directory (e.g. my_DICE_experiment) for your experiment (either manually or using the command prompt or terminal):\nmkdir my_DICE_experiment\ncd my_DICE_experiment\nNow download the DICE.otreezip file (which you can find here) and store it in your new directory. Then use the command prompt or terminal and run the otree unzip command to extract the contents of the otreezip file:\notree unzip DICE.otreezip\nIf necessary, adjust the path to the otreezip file.\nThis will unpack the experiment such that you can browse and edit its raw files. One of them is called requirements.txt. You can find it in my_DICE_experiment/ (or whatever name you chose for your project directory). You should have all the requirements installed but it may not hurt to re-install them using:\npip install -r requirements.txt"
  },
  {
    "objectID": "deployment.html#running-the-experiment-locally",
    "href": "deployment.html#running-the-experiment-locally",
    "title": "3  Deploy DICE yourself",
    "section": "3.4 Running the experiment locally",
    "text": "3.4 Running the experiment locally\nRun the following command to set up the database:\notree resetdb\nStart the oTree development server:\notree devserver\nOpen a web browser and go to:\nhttp://localhost:8000\nYou should see the oTree admin interface."
  },
  {
    "objectID": "deployment.html#troubleshooting",
    "href": "deployment.html#troubleshooting",
    "title": "3  Deploy DICE yourself",
    "section": "3.5 Troubleshooting",
    "text": "3.5 Troubleshooting\nIf you encounter any issues while setting up or running the experiment, consider the following:\n\nIf you see any “module not found” errors, make sure all required packages are installed.\nCheck that you’re in the correct directory when running commands.\nEnsure your Python version is compatible with the oTree version used in the provided experiment.\n\n\n\n\n\n\n\nNote\n\n\n\nIf you encounter any specific errors or issues with the provided experiment, consult oTree’s official documentation, oTree’s official forum, generative AI or Hauke Roggenkamp."
  },
  {
    "objectID": "deployment.html#basic-server-setup-with-heroku",
    "href": "deployment.html#basic-server-setup-with-heroku",
    "title": "3  Deploy DICE yourself",
    "section": "4.1 Basic server setup with Heroku",
    "text": "4.1 Basic server setup with Heroku\nHeroku is a commercial cloud hosting provider. It is the simplest way to deploy oTree.\nThe Heroku free plan is sufficient for testing your app, but once you are ready to launch a study, you should upgrade to a paid server, which can handle more traffic. However, Heroku is quite inexpensive, because you only pay for the time you actually use it. If you run a study for only 1 day, you can turn off your dynos and addons, and then you only pay 1/30 of the monthly cost. Often this means you can run a study for just a few dollars.\nTo deploy to Heroku, you should use oTree Hub, which automates your server setup and ensures your server is correctly configured.\noTree Hub also offers error/performance monitoring.\n\n4.1.1 Server performance\nHeroku offers different performance tiers for resources such as your dyno and database. What tier you need depends on how much traffic your app will get, and how it is coded.\nPerformance is a complicated subject since there are many factors that affect performance. oTree Hub’s Pro plan has a “monitor” section that will analyze your logs to identify performance issues.\n\n\n4.1.2 General tips\n\nUpgrade oTree to the latest version\nWith the higher dyno tiers, Heroku provides a “Metrics” tab. Look at “Dyno load”. If users are experiencing slow page load times and your your dyno load stays above 1, then you should get a faster dyno. (But don’t run more than 1 web dyno.)\nIf your dyno load stays under 1 but page load times are still slow, the bottleneck might be something else like your Postgres database."
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "4  Data",
    "section": "",
    "text": "We created the shiny-app to pre-process the raw data which is tabular but also contains columns with JSON data."
  }
]